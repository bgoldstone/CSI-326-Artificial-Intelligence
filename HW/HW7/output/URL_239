https://servicedesk.muhlenberg.edu/HEAT/


Relative Link Count: 2

Absolute Link Count: 10

List of Links:

['http://muhlenberg.edu/HEAT/Account/SsoLogin?provider=OneLogin', 'http://muhlenberg.edu/HEAT/Account/ForgotPassword', 'https://www.ivanti.com/', 'https://www.ivanti.com/company/legal', 'https://www.ivanti.com/company/legal', 'https://www.ivanti.com/company/legal/ivanti-patents', 'https://www.ivanti.com/', 'https://www.ivanti.com/company/legal', 'https://www.ivanti.com/company/legal', 'https://www.ivanti.com/company/legal/ivanti-patents']

Contents:

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title></title>
    
<link href="/HEAT/lib/bootstrap-3.4.1-dist/css/login?v=eM3UDVICH-Ycd74S_UG2m-qKc9CZ3C7puI49PWdfYkg1" rel="stylesheet"/>

<link href="/HEAT/css/login?v=VR5nCGuELAQK83tcIUgW9EAsX5f41ea2bleU7SN63Pk1" rel="stylesheet"/>


    <link rel="stylesheet" type="text/css" href="/HEAT/LoginStylesGenerator/GenerateCssFromSetting" />

    
    <!--[if lt IE 9]>
        <link rel="stylesheet" type="text/css" href="/HEAT/css/login2ie8override.css" />
    <![endif]-->


    <script src="/HEAT/lib/RespondJs/respond.min.js" type="text/javascript"></script>
</head>
<body class="login-layout LoginLayoutTmpLegacy">
    

<div class="heat-bar heat-bar-top"></div>

<div class="heat-table">
    <div class="heat-col-left">
        <div class="logo"></div>
        <div class="title"><h1>IT Support Portal</h1></div>
        <div class="content-body">
            


<div class="content-inner row-fluid">
<form action="/HEAT/" class="form-horizontal" method="post" role="form"><input name="__RequestVerificationToken" type="hidden" value="gGeDc_EVNM7ApmWqv3w209HLNKrei48RMf69sQOcUnZD8c1ENXl8TZSTlQGltTer6_LY5FSDwcNGxXF6BTOmGnceC7c1" />    <div class="form-group">
        <label class="hidden-xs col-sm-3 col-md-3 control-label" for="UserName">User name</label>
        <div class="col-xs-12 col-sm-8">
            <input autocomplete="off" class="form-control has-success has-feedback" id="UserName" name="UserName" placeholder="User Name" type="text" value="" />
        </div>
    </div>
    <div class="form-group">
        <label class="hidden-xs col-sm-3 col-md-3 control-label" for="Password">Password</label>
        <div class="col-xs-12 col-sm-8">
            <input autocomplete="off" class="form-control" id="Password" name="Password" placeholder="Password" type="password" />
        </div>
    </div>
    <div class="form-group" id="enableBioMetrics" style="display:none">
        <div class="col-xs-2 col-sm-3 col-md-3" style="padding-left: 0; padding-right:0;">
            <input class="control-label pull-right" id="EnableBiometric" name="EnableBiometric" type="checkbox" value="true" /><input name="EnableBiometric" type="hidden" value="false" />
            <span id="fancymove" style="display:none"></span>
        </div>
        <div id="fancyscreen" class="col-xs-10 col-sm-8 col-md-8">
            <label for="EnableBiometric" style="padding-top: 1px;">Enable Biometric Authentication</label>
        </div>
    </div>
<input id="Tenant" name="Tenant" type="hidden" value="servicedesk.muhlenberg.edu" /><input id="IsUrlSharedByTenants" name="IsUrlSharedByTenants" type="hidden" value="False" /><input id="ClientTimeOffset" name="ClientTimeOffset" type="hidden" value="0" /><input id="ClientTimezoneName" name="ClientTimezoneName" type="hidden" value="" /><input id="ReturnUrl" name="ReturnUrl" type="hidden" value="" /><input id="PrefferedRole" name="PrefferedRole" type="hidden" value="" /><input id="IsForgotPasswordAllowed" name="IsForgotPasswordAllowed" type="hidden" value="True" /><input id="IsFrame" name="IsFrame" type="hidden" value="False" /><input id="OpenIDSignIn" name="OpenIDSignIn" type="hidden" value="" /><input id="SsoReturnUrl" name="SsoReturnUrl" type="hidden" value="" />    <div class="form-actions">
        <button type="submit" class="btn btn-primary">Login</button>
        <div>
            <a class="x-login-external-provider-link" href="/HEAT/Account/SsoLogin?provider=OneLogin">Sign in with OneLogin</a>
        </div>

        <a href="/HEAT/Account/ForgotPassword">Forgot Password?</a>
    </div>
</form>    <div class="form-group" id="bioMetricsButton" style="display:none">
        <label style="text-align:center">OR</label>
        <div class="col-xs-12 col-sm-8" style="padding-left: 0; padding-right:0;">
            <button class="form-control has-success has-feedback" style="text-align:left">Login using Biometric Authentication</button>
        </div>
    </div>
</div>


        </div>
        <div class="content-footer">
            <div class="additional-text"></div>
            <p>To&nbsp;learn more about our innovative IT&nbsp;Service Management solutions, visit our website at&nbsp;<a href="https://www.ivanti.com/" target="_blank">Ivanti</a></p>
            <p>Copyright &copy;&nbsp;2005-2021 Ivanti. All&nbsp;rights reserved.</p>
            <p> 
                <a href="https://www.ivanti.com/company/legal" target="_blank">Privacy Policy</a> - 
                <a href="https://www.ivanti.com/company/legal" target="_blank">Legal Terms and Notices</a> - 
                <a href="https://www.ivanti.com/company/legal/ivanti-patents" target="_blank">Protected by Patents</a> 
                
            </p>
        </div>
    </div>
    <div class="heat-col-right">
        <div class="logo"></div>
            <div class="title"><h1>IT Support Portal</h1></div>
        <div class="content-footer">
            <div class="additional-text"></div>
            <p>To&nbsp;learn more about our innovative IT&nbsp;Service Management solutions, visit our website at&nbsp;<a href="https://www.ivanti.com/" target="_blank">Ivanti</a></p>
            <p>Copyright &copy;&nbsp;2005-2021 Ivanti. All&nbsp;rights reserved.</p>
            <p>
                <a href="https://www.ivanti.com/company/legal" target="_blank">Privacy Policy</a> -
                <a href="https://www.ivanti.com/company/legal" target="_blank">Legal Terms and Notices</a> -
                <a href="https://www.ivanti.com/company/legal/ivanti-patents" target="_blank">Protected by Patents</a>
            </p>
        </div>
    </div>
</div>

<div class="heat-bar heat-bar-bottom"></div> 

<script src="/HEAT/bundles/jquery?v=JmcMa1Mc9WHC3Bw-UmilWve6RkNYjLIQya-8QksYE0A1"></script>

<script src="/HEAT/bundles/bootstrap?v=M4Nk6kIOwMFflsEKET0iPL9i5YBqbzMzvUOrd8gyCnw1"></script>

<script type="text/javascript">
    var adjustHeightHandler = function () {
        var windowHeight = $(window).innerHeight() - parseInt($('body').css('marginBottom')) - parseInt($('body').css('marginTop')),
            contentHeight = $('.heat-table').outerHeight(),
            barsHeight = $('.heat-bar-top').is(':visible') ? ($('.heat-bar-top').outerHeight(true) * 2) : 0,
            margin = (windowHeight - contentHeight - barsHeight) / 2;

        $('.heat-table').css({ marginTop: ((margin > 0) ? margin + 'px' : 0) });
    };
    $(function () {
        $(window).resize(adjustHeightHandler);
        adjustHeightHandler();
    });
</script>

    <script type="text/javascript" src="/HEAT/lib/jstz.min.js"></script>
    <script type="text/javascript">
        $(function () {
            window.cancelBioMetricPop = false;
            var timezoneOffset = (new Date()).getTimezoneOffset(),
                timezone,
                appendParameterToProviderAnchor;

            if (document.getElementById('ClientTimeOffset')) {
                document.getElementById('ClientTimeOffset').value = timezoneOffset;
            }

            if (document.getElementById("ClientTimezoneName")) {
                timezone = jstz.determine();
                if (timezone) {
                    document.getElementById("ClientTimezoneName").value = timezone.name();
                }
            }

            appendParameterToProviderAnchor = function (parameterName, parameterValueStr) {
                $('.x-login-external-provider-link').attr('href', function (index, href) {
                    return href + "&" + parameterName + "=" + encodeURIComponent(parameterValueStr);
                });
            };

            // update external provider links to include timezone
            appendParameterToProviderAnchor('timezoneOffset', (timezoneOffset || 0).toString());

            if (timezone) {
                appendParameterToProviderAnchor('timezone', timezone.name());
            }

            var returnUri = decodeURIComponent(window.location.href.split("?returnUrl=")[1]);
            if (returnUri && returnUri !== null) {
                var additionalUrl = returnUri.split("#")[1];
                if (additionalUrl && additionalUrl !== '') {
                    appendParameterToProviderAnchor('additionalUrl', additionalUrl);
                }
            }

            addRequiredParams();

            function addRequiredParams() {
                var params = new URLSearchParams(location.search);
                var paramsToAdd = ["Scope", "role", "CommandId", "ItemType", "ItemId", "Tab", "Template"];
                for (var i = 0; i < paramsToAdd.length; i++) {
                    var paramValue = params.get(paramsToAdd[i]);
                    if (paramValue) {
                        appendParameterToProviderAnchor(paramsToAdd[i], paramValue);
                    }
                }
            }
            

            onSuccessCallBack = function (data) {
                var response = JSON.parse(data);
                var tenant = 'servicedesk.muhlenberg.edu';
                var url = "/HEAT/Account/AuthenticateBioMetric";
                var model = { BioMetricToken : response.biometricToken,
                    DeviceID : response.deviceId,
                    Tenant: tenant,
                    ClientTimeOffset: timezoneOffset,
                    ClientTimezoneName: timezone.name()
                };
                $.ajax({
                    type: "GET",
                    data: model,
                    url: url,
                    contentType: "application/json"
                }).done(function (res) {
                    var modelReturnUrl = '';
                    switch(res.Action){
                        case 'SelectRole': var redirectUrl = window.location.origin + "/HEAT/Account/SelectRole?returnUrl=ReplaceReturnUrl";
                                            break;
                        case 'DefaultPage': {
                                                var redirectUrl = window.location.origin + window.location.pathname + modelReturnUrl;
                                                window.location.href = redirectUrl;
                                                break;
                                            }
                        case 'LoginPage': var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                                            break;
                        case 'ForgotPassword': var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                                                if (typeof (revokeBiometricTokenOnClient) !== "undefined") {
                                                    revokeBiometricTokenOnClient();
                                                }
                                                alert("Password Expired. Please Re-Login")
                                                break;
                        case 'ResetPassword': var redirectUrl = window.location.origin + "/HEAT/Account/ResetPassword?returnUrl=ReplaceReturnUrl";
                                                if (typeof (revokeBiometricTokenOnClient) !== "undefined") {
                                                    revokeBiometricTokenOnClient();
                                                }
                                                break;
                        case 'BioMetricTokenExpired': var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                                                        if (typeof (revokeBiometricTokenOnClient) !== "undefined") {
                                                            revokeBiometricTokenOnClient();
                                                        }
                                                        break;
                        default: var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                    }
                    redirectUrl = redirectUrl.replace("ReplaceReturnUrl",encodeURIComponent(modelReturnUrl));
                    window.location.href = redirectUrl
                });
            }

            $('#bioMetricsButton').click(function(){
                if (typeof (authenticateWithBiometrics) !== "undefined") {
                    var interval = setInterval(function () {
	                    if (window['nativeinteraction']) {
		                    setTimeout(function (data) {
                                authenticateWithBiometrics(function (data) {
                                    //biometric success
                                    onSuccessCallBack(data);
                                }, function (data) {
                                        if (data === "false") {
                                            var modelReturnUrl = '';
                                            var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                                            redirectUrl = redirectUrl.replace("ReplaceReturnUrl", encodeURIComponent(modelReturnUrl));
                                            window.location.href = redirectUrl;
                                        }
                                        else {
                                            window.cancelBioMetricPop = true;
                                        }
                                });
                                clearInterval(interval)
		                    })
	                    }
                    }, 100);
                }
            });

            $('#UserName').on('keyup', function (ev) {
                if (window.cancelBioMetricPop) {
                    if (ev.target.value && event.target.value.length > 1) {
                        if (typeof revokeBiometricTokenOnClient !== 'undefined') {
                            revokeBiometricTokenOnClient();
                            document.getElementById('bioMetricsButton').style.display = 'none';
                            document.getElementById('enableBioMetrics').style.display = 'block';

                        }
                    }
                }
            });
            $("form").validate({
                rules: {
                    UserName: "required",
                    Password: "required"
                },

                showErrors: function (errorMap, errorList) {
                    var i, elements, error;
                    for (i = 0; errorList[i]; i++) {
                        error = errorList[i];
                        if (this.settings.highlight) {
                            this.settings.highlight.call(this, error.element);
                        }
                    }

                    if (this.settings.unhighlight) {
                        for (i = 0, elements = this.validElements(); elements[i]; i++) {
                            this.settings.unhighlight.call(this, elements[i]);
                        }
                    }
                },

                highlight: function (element) {
                    var formGroup = $(element).closest(".form-group"),
                        glyphContainer = $(formGroup).find("span.glyphicon");

                    formGroup.addClass("has-error");
                    glyphContainer.addClass("glyphicon-remove");
                },

                unhighlight: function (element) {
                    var formGroup = $(element).closest(".form-group"),
                        glyphContainer = $(formGroup).find("span.glyphicon");

                    formGroup.removeClass("has-error");
                    glyphContainer.removeClass("glyphicon-remove");
                }
            });

            var bindCordovaMethods = function () {
                var _loadBiometricsJS = function loadLocalJS(folder) {
                    var url = "https://cdvfile/localhost/" + folder + "/www/js/biometrics.js";
                    var el = document.createElement('script');
                    el.id = "1245";
                    el.onerror = function () {
                        console.error("Cordova", "Local js not found");
                    }
                    el.src = url;
                    el.onload = function () {
                        if (typeof (isDeviceCapableForBiometrics) !== "undefined") {

                            var interval = setInterval(function () {
                                if (window['nativeinteraction']) {
                                    setTimeout(function () {
                                        isDeviceCapableForBiometrics(function callback(param) {
                                            // 0 = biometric Disable
                                            // 1 = biometric Enabled and No Token Present
                                            // 2 = biometric Enabled and Token Present
                                            if (param === 1) {
                                                document.getElementById('enableBioMetrics').style.display = 'block';
                                            } else if (param === 2) {
                                                document.getElementById('bioMetricsButton').style.display = 'block';
                                                if (typeof (authenticateWithBiometrics) !== "undefined") {
                                                    authenticateWithBiometrics(function (data) {
                                                        //biometric success
                                                        onSuccessCallBack(data);
                                                    }, function (data) {
                                                            if (data === "false") {
                                                                var modelReturnUrl = '';
                                                                var redirectUrl = window.location.origin + "/HEAT/?returnUrl=ReplaceReturnUrl";
                                                                redirectUrl = redirectUrl.replace("ReplaceReturnUrl", encodeURIComponent(modelReturnUrl));
                                                                window.location.href = redirectUrl;
                                                            }
                                                            else {
                                                                window.cancelBioMetricPop = true;
                                                            }
                                                    });
                                                }
                                            }
                                        });
                                        clearInterval(interval)
                                    })
                                }
                            }, 100);

                        }
                    }
                    document.body.appendChild(el);
                }


                var _appendCordovaScripts = function (localFolder) {
                    var url = "https://cdvfile/localhost/" + localFolder + "/www/cordova.js";
                    var el = document.createElement('script');
                    el.id = "cordova";
                    el.type = "text/javascript";
                    el.onerror = function () {
                        console.error('error loading cordova script')

                    }
                    el.onload = function () {
                        _loadBiometricsJS(localFolder);
                    }
                    el.src = url;
                    document.body.appendChild(el);
                }
                var _getUrlVariables = function getUrlVars() {
                    var vars = {};
                    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                        vars[key] = value;

                    });
                    /**
                     *  if the platform is rendered as ios#home , and even if the #fragment does not exists
                     * for ex ios , the split will return [ios]
                     *
                     */
                    vars.platform = vars.platform.split('#')[0]
                    return vars;
                };
                var _getUrlParams = function getUrlParam(parameter, defaultvalue) {
                    var urlparameter = defaultvalue;
                    if (window.location.href.indexOf(parameter) > -1) {
                        urlparameter = _getUrlVariables()[parameter];
                    }
                    return urlparameter;
                };
                var localFolder = "";
                var _loadCordovaJS = function loadCordovaJS() {
                    //First check we are running in the container
                    if(!localStorage.getItem('isWrapped')) {
                        var isWrapped = _getUrlParams("isMobileWrapper", "false");
                        localStorage.setItem('isWrapped', isWrapped)
                    } else {
                        var isWrapped = localStorage.getItem('isWrapped');
                    }

                    if (isWrapped === "false") {
                        return;
                    }
                    //Get platform
                    if(!localStorage.getItem('mobilePlatform')) {
                        var platform = _getUrlParams("platform", "unknown");
                        localStorage.setItem('mobilePlatform', platform)
                    } else {
                        var platform = localStorage.getItem('mobilePlatform');
                    }
                    if (platform === "android") {
                        localFolder = "assets";
                        localStorage.setItem('cordovalocalfolder', "assets")

                    } else if (platform === "ios") {
                        localFolder = "bundle";
                        localStorage.setItem('cordovalocalfolder', 'bundle')
                    }

                    else {
                        return;
                    }

                    _appendCordovaScripts(localStorage.getItem('cordovalocalfolder'))

                    //Attempt to load the cordova JS. If it is not actually running in the cordova wrapper, this will fail

                }
                _loadCordovaJS();

            }

            bindCordovaMethods()

            function requiresReturnUrlUpdate(returnUri) {
                return returnUri
                    && returnUri !== "undefined"
                    && (returnUri.toLowerCase().indexOf("modules/selfservice/#") > -1
                        || returnUri.toLowerCase().indexOf("scope=")
                    );
            }

            setReturnUrl = function () {
                var returnUri = decodeURIComponent(window.location.href.split("?returnUrl=")[1]);
                var returnUriFromSessionStorage = sessionStorage.setItem("ReturnUrl", location.search);
                if (requiresReturnUrlUpdate(returnUri)) {
                    document.querySelector("#ReturnUrl").value = returnUri;
                } else if (returnUriFromSessionStorage && returnUriFromSessionStorage !== "") {
                    document.querySelector("#ReturnUrl").value = returnUriFromSessionStorage;
                }
            }

            setReturnUrl();
        });
    </script>




    <script type="text/javascript">
        var resizeMethod = function() {
            if (adjustHeightHandler) {
                adjustHeightHandler();
            }
        },
        PreviewController = {
            _styleEl: null,
            _logoStyleEl: null,
            _bgCacheEl: {},

            applyPreviewStyle: function(data) {
                var me = this,
                    path = "/HEAT/LoginStylesGenerator/GenerateCssFromDefinition";
                $.ajax(path, {
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    type: 'POST',
                    success: function(result) {
                        var head;
                        if (!me._styleEl) {
                            me._styleEl = document.createElement('style');
                            me._styleEl.type = 'text/css';

                            head = document.head || document.getElementsByTagName('head')[0];
                            head.appendChild(me._styleEl);
                        }

                        if (me._styleEl.styleSheet){
                            me._styleEl.styleSheet.cssText = result;
                        } else {
                            me._styleEl.innerHTML = result;
                        }
                        resizeMethod();
                    }
                });
            },

            applyTitle: function(title) {
                $('.title h1').text(title);
            },

            applyCopyright: function(copyright) {
                if (copyright) {
                    $('.content-footer .additional-text').show().html(copyright);
                } else {
                    $('.content-footer .additional-text').hide();
                }
            },

            isPreviewMode: function () {
                return location.search.indexOf('preview') > 0;
            },

            disableLinks: function() {
                $('body').delegate('a, button', 'click', function() {
                    return false;
                })
            },

            destroy: function() {
                delete this._bgCacheEl;
                delete this._logoStyleEl;
            }
        };
        $(function() {
            if (PreviewController.isPreviewMode() && window.parent !== window && window.parent.StyleConfigurator) {
                var controller = window.parent.StyleConfigurator.app.getStyleController('Login');
                if (controller) {
                    controller.initPreviewController(PreviewController);
                }
            }
        });
    </script>
</body>
</html>